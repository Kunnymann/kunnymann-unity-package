.TH "Kunnymann.UI.UITransitionBase" 3 "Version 1.0" "Kunnymann unity package" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Kunnymann.UI.UITransitionBase \- \fBUI\fP Animation Transition을 적용하는 \fBBase\fP Class\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MonoBehaviour\&.
.PP
Inherited by \fBKunnymann\&.UI\&.UIFadeInOut\fP, \fBKunnymann\&.UI\&.UIFriendlyPopIn\fP, \fBKunnymann\&.UI\&.UIPopIn\fP, and \fBKunnymann\&.UI\&.UISlide\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBShowImmediately\fP ()"
.br
.RI "Animation을 생략하고, 즉시 Show합니다\&. "
.ti -1c
.RI "async UniTask \fBShow\fP (float duration=0)"
.br
.RI "Animation을 재생하고, Show합니다\&. "
.ti -1c
.RI "void \fBHideImmediately\fP ()"
.br
.RI "Animation을 생략하고, 즉시 Hide합니다\&. "
.ti -1c
.RI "async UniTask \fBHide\fP (float duration=0)"
.br
.RI "Animation을 재생하고, Hide합니다\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "UnityEvent< \fBVisibleState\fP > \fBChangedVisibleState\fP = new UnityEvent<\fBVisibleState\fP>()"
.br
.RI "VisibleState에 따라 호출되는 이벤트 "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBInitialize\fP ()"
.br
.RI "애니메이션 실행 직전, 초기화를 진행하는 함수입니다\&. "
.ti -1c
.RI "UniTask \fBShowAnim\fP (float duration)"
.br
.RI "지정된 시간동안 Show 애니메이션을 재생하는 내부 함수입니다\&. "
.ti -1c
.RI "UniTask \fBHideAnim\fP (float duration)"
.br
.RI "지정된 시간동안 Hide 애니메이션을 재생하는 내부 함수입니다\&. "
.ti -1c
.RI "void \fBShowWithoutAnim\fP ()"
.br
.RI "즉시 Show를 실행하는 내부 함수입니다\&. "
.ti -1c
.RI "void \fBHideWithoutAnim\fP ()"
.br
.RI "즉시 Hide를 실행하는 내부 함수입니다\&. "
.ti -1c
.RI "void \fBKillAnim\fP ()"
.br
.RI "재생 중인 Animation을 즉시 종료하는 내부 함수입니다\&. "
.ti -1c
.RI "virtual void \fBOnShow\fP ()"
.br
.RI "VisibleState가 Appeared로 변경되었을 때 호출되는 함수입니다\&. "
.ti -1c
.RI "virtual void \fBOnShowing\fP ()"
.br
.RI "VisibleState가 Appearing로 변경되었을 때 호출되는 함수입니다\&. "
.ti -1c
.RI "virtual void \fBOnHide\fP ()"
.br
.RI "VisibleState가 Disappeared로 변경되었을 때 호출되는 함수입니다\&. "
.ti -1c
.RI "virtual void \fBOnHiding\fP ()"
.br
.RI "VisibleState가 Disappearing로 변경되었을 때 호출되는 함수입니다\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "CanvasGroup \fBCanvasGroup\fP\fR [get]\fP"
.br
.RI "대상 CanvasGroup "
.ti -1c
.RI "\fBVisibleState\fP \fBVisibleState\fP\fR [get, set]\fP"
.br
.RI "VisibleState\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBUI\fP Animation Transition을 적용하는 \fBBase\fP Class\&. 
.SH "Member Function Documentation"
.PP 
.SS "async UniTask Kunnymann\&.UI\&.UITransitionBase\&.Hide (float duration = \fR0\fP)"

.PP
Animation을 재생하고, Hide합니다\&. 
.PP
\fBParameters\fP
.RS 4
\fIduration\fP 시간
.RE
.PP
\fBReturns\fP
.RS 4
UniTask
.RE
.PP

.SS "UniTask Kunnymann\&.UI\&.UITransitionBase\&.HideAnim (float duration)\fR [abstract]\fP, \fR [protected]\fP"

.PP
지정된 시간동안 Hide 애니메이션을 재생하는 내부 함수입니다\&. 
.PP
\fBParameters\fP
.RS 4
\fIduration\fP 시간
.RE
.PP
\fBReturns\fP
.RS 4
UniTask
.RE
.PP

.SS "virtual void Kunnymann\&.UI\&.UITransitionBase\&.Initialize ()\fR [protected]\fP, \fR [virtual]\fP"

.PP
애니메이션 실행 직전, 초기화를 진행하는 함수입니다\&. 
.PP
Reimplemented in \fBKunnymann\&.UI\&.UIFriendlyPopIn\fP, \fBKunnymann\&.UI\&.UIPopIn\fP, and \fBKunnymann\&.UI\&.UISlide\fP\&.
.SS "async UniTask Kunnymann\&.UI\&.UITransitionBase\&.Show (float duration = \fR0\fP)"

.PP
Animation을 재생하고, Show합니다\&. 
.PP
\fBParameters\fP
.RS 4
\fIduration\fP 시간
.RE
.PP
\fBReturns\fP
.RS 4
UniTask
.RE
.PP

.SS "UniTask Kunnymann\&.UI\&.UITransitionBase\&.ShowAnim (float duration)\fR [abstract]\fP, \fR [protected]\fP"

.PP
지정된 시간동안 Show 애니메이션을 재생하는 내부 함수입니다\&. 
.PP
\fBParameters\fP
.RS 4
\fIduration\fP 시간
.RE
.PP
\fBReturns\fP
.RS 4
UniTask
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Kunnymann unity package from the source code\&.
