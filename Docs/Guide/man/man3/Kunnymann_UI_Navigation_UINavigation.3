.TH "Kunnymann.UI.Navigation.UINavigation" 3 "Version 1.0" "Kunnymann unity package" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Kunnymann.UI.Navigation.UINavigation \- ViewUnit을 관리하는 클래스  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MonoBehaviour\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "T \fBGetView< T >\fP (string viewName)"
.br
.RI "해당 Navigation에 등록된 View 객체를 가져옵니다 "
.ti -1c
.RI "T \fBPush< T >\fP (string viewName)"
.br
.RI "UIManager에 ViewUnit을 밀어넣습니다\&. History stack에 Push하고, View transition queue에 Transition을 밀어 넣습니다\&. "
.ti -1c
.RI "\fBViewUnit\fP \fBPop\fP ()"
.br
.RI "UIManager에 현재 View를 뽑아냅니다\&. History stack에서 Pop하고, View transition queue에 Transition을 밀어 넣습니다\&. "
.ti -1c
.RI "\fBViewUnit\fP \fBPopTo\fP (string viewName)"
.br
.RI "UIManager에서 특정 View까지 모두 뽑아냅니다\&. "
.ti -1c
.RI "\fBViewUnit\fP \fBPopToRoot\fP ()"
.br
.RI "UIManager에서 RootView까지 모두 뽑아냅니다\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "Action< \fBViewUnit\fP > \fBOnViewChanged\fP"
.br
.RI "뷰가 전환될 때 호출할 이벤트 "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBViewUnit\fP \fBPreviousViewUnit\fP\fR [get]\fP"
.br
.RI "직전 Pop된 ViewUnit을 반환 "
.ti -1c
.RI "\fBViewUnit\fP \fBCurrentViewUnit\fP\fR [get]\fP"
.br
.RI "현재 View를 반환 "
.in -1c
.SH "Detailed Description"
.PP 
ViewUnit을 관리하는 클래스 
.SH "Member Function Documentation"
.PP 
.SS "T Kunnymann\&.UI\&.Navigation\&.UINavigation\&.GetView< T > (string viewName)"

.PP
해당 Navigation에 등록된 View 객체를 가져옵니다 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP \fBViewUnit\fP 클래스
.RE
.PP
\fBParameters\fP
.RS 4
\fIviewName\fP \fBViewUnit\fP 게임오브젝트 이름
.RE
.PP
\fBReturns\fP
.RS 4
\fBViewUnit\fP 객체
.RE
.PP

.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fIViewUnit\fP
.SS "\fBViewUnit\fP Kunnymann\&.UI\&.Navigation\&.UINavigation\&.Pop ()"

.PP
UIManager에 현재 View를 뽑아냅니다\&. History stack에서 Pop하고, View transition queue에 Transition을 밀어 넣습니다\&. 
.PP
\fBReturns\fP
.RS 4
View unit
.RE
.PP

.SS "\fBViewUnit\fP Kunnymann\&.UI\&.Navigation\&.UINavigation\&.PopTo (string viewName)"

.PP
UIManager에서 특정 View까지 모두 뽑아냅니다\&. 
.PP
\fBParameters\fP
.RS 4
\fIviewName\fP View의 게임오브젝트 이름
.RE
.PP
\fBReturns\fP
.RS 4
View unit
.RE
.PP

.SS "\fBViewUnit\fP Kunnymann\&.UI\&.Navigation\&.UINavigation\&.PopToRoot ()"

.PP
UIManager에서 RootView까지 모두 뽑아냅니다\&. 
.PP
\fBReturns\fP
.RS 4
Root view
.RE
.PP

.SS "T Kunnymann\&.UI\&.Navigation\&.UINavigation\&.Push< T > (string viewName)"

.PP
UIManager에 ViewUnit을 밀어넣습니다\&. History stack에 Push하고, View transition queue에 Transition을 밀어 넣습니다\&. 
.PP
\fBParameters\fP
.RS 4
\fIviewName\fP View의 게임오브젝트 이름
.RE
.PP
\fBReturns\fP
.RS 4
View unit
.RE
.PP

.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fIViewUnit\fP


.SH "Author"
.PP 
Generated automatically by Doxygen for Kunnymann unity package from the source code\&.
