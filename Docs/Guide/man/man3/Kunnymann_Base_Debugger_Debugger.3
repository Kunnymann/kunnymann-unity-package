.TH "Kunnymann.Base.Debugger.Debugger" 3 "Version 1.0" "Kunnymann unity package" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Kunnymann.Base.Debugger.Debugger \- \fBKunnymann\fP 패키지의 디버거 클래스  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBHasLogLevel\fP (\fBLogLevel\fP lv)"
.br
.RI "Log의 레벨 수준을 비교합니다 "
.ti -1c
.RI "static void \fBDebug\fP (object msg)"
.br
.RI "Debug 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBDebug\fP (string format, params object[] args)"
.br
.RI "Debug 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBInfo\fP (object msg)"
.br
.RI "Info 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBInfo\fP (string format, params object[] args)"
.br
.RI "Info 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBWarning\fP (object msg)"
.br
.RI "Warning 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBWarning\fP (string format, params object[] args)"
.br
.RI "Warning 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBError\fP (object msg)"
.br
.RI "Error 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBError\fP (string format, params object[] args)"
.br
.RI "Error 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBFatal\fP (object msg)"
.br
.RI "Fatal 레벨의 로그를 출력합니다 "
.ti -1c
.RI "static void \fBFatal\fP (string format, params object[] args)"
.br
.RI "Fatal 레벨의 로그를 출력합니다 "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "static \fBLogLevel\fP \fBLogLevel\fP\fR [get, set]\fP"
.br
.RI "Log level\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBKunnymann\fP 패키지의 디버거 클래스 
.SH "Member Function Documentation"
.PP 
.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Debug (object msg)\fR [static]\fP"

.PP
Debug 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fImsg\fP 메시지
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Debug (string format, params object[] args)\fR [static]\fP"

.PP
Debug 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fIformat\fP 메시지 포멧
.br
\fIargs\fP 파라미터
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Error (object msg)\fR [static]\fP"

.PP
Error 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fImsg\fP 메시지
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Error (string format, params object[] args)\fR [static]\fP"

.PP
Error 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fIformat\fP 메시지 포멧
.br
\fIargs\fP 파라미터
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Fatal (object msg)\fR [static]\fP"

.PP
Fatal 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fImsg\fP 메시지
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Fatal (string format, params object[] args)\fR [static]\fP"

.PP
Fatal 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fIformat\fP 메시지 포멧
.br
\fIargs\fP 파라미터
.RE
.PP

.SS "static bool Kunnymann\&.Base\&.Debugger\&.Debugger\&.HasLogLevel (\fBLogLevel\fP lv)\fR [static]\fP"

.PP
Log의 레벨 수준을 비교합니다 
.PP
\fBParameters\fP
.RS 4
\fIlv\fP 대상
.RE
.PP
\fBReturns\fP
.RS 4
레벨 이하인지 판단한 결과
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Info (object msg)\fR [static]\fP"

.PP
Info 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fImsg\fP 메시지
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Info (string format, params object[] args)\fR [static]\fP"

.PP
Info 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fIformat\fP 메시지 포멧
.br
\fIargs\fP 파라미터
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Warning (object msg)\fR [static]\fP"

.PP
Warning 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fImsg\fP 메시지
.RE
.PP

.SS "static void Kunnymann\&.Base\&.Debugger\&.Debugger\&.Warning (string format, params object[] args)\fR [static]\fP"

.PP
Warning 레벨의 로그를 출력합니다 
.PP
\fBParameters\fP
.RS 4
\fIformat\fP 메시지 포멧
.br
\fIargs\fP 파라미터
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Kunnymann unity package from the source code\&.
